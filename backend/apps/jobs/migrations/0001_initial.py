# Generated by Django 5.2.4 on 2025-07-25 07:06

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('map', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=200)),
                ('company', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(help_text='Full job description')),
                ('requirements', models.TextField(blank=True, help_text='Job requirements and qualifications')),
                ('benefits', models.TextField(blank=True, help_text='Job benefits and perks')),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('freelance', 'Freelance'), ('temporary', 'Temporary')], db_index=True, max_length=20)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('executive', 'Executive')], db_index=True, max_length=20)),
                ('category', models.CharField(db_index=True, max_length=100)),
                ('skills_required', models.TextField(blank=True, help_text='Comma-separated skills')),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_currency', models.CharField(default='USD', max_length=3)),
                ('salary_type', models.CharField(choices=[('hourly', 'Hourly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], db_index=True, default='yearly', max_length=20)),
                ('is_remote', models.BooleanField(db_index=True, default=False)),
                ('remote_type', models.CharField(choices=[('no', 'Not Remote'), ('partial', 'Partially Remote'), ('full', 'Fully Remote')], db_index=True, default='no', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('filled', 'Filled'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], db_index=True, default='draft', max_length=20)),
                ('application_deadline', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('max_applications', models.PositiveIntegerField(blank=True, null=True)),
                ('application_email', models.EmailField(blank=True, max_length=254)),
                ('application_url', models.URLField(blank=True)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('meta_description', models.CharField(blank=True, max_length=160)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('view_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('application_count', models.PositiveIntegerField(db_index=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='map.location')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField(blank=True)),
                ('resume_file', models.FileField(blank=True, upload_to='resumes/')),
                ('portfolio_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('interview_completed', 'Interview Completed'), ('offer_made', 'Offer Made'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], db_index=True, default='pending', max_length=30)),
                ('notes', models.TextField(blank=True, help_text='Internal notes from employer')),
                ('last_contact_date', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('interview_scheduled_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('source', models.CharField(choices=[('website', 'Website'), ('mobile_app', 'Mobile App'), ('external', 'External Site'), ('referral', 'Referral')], db_index=True, default='website', max_length=50)),
                ('applied_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job')),
            ],
            options={
                'db_table': 'job_applications',
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='JobView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referrer', models.URLField(blank=True)),
                ('source', models.CharField(blank=True, choices=[('search', 'Search Results'), ('browse', 'Browse/Category'), ('map', 'Map View'), ('direct', 'Direct Link'), ('social', 'Social Media')], db_index=True, max_length=50)),
                ('viewed_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_views', to='jobs.job')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'job_views',
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this job')),
                ('saved_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by_users', to='jobs.job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'saved_jobs',
                'ordering': ['-saved_at'],
            },
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['status', 'job_type'], name='jobs_status_57d9a3_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['category', 'experience_level'], name='jobs_categor_30fe1c_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['posted_by', 'status'], name='jobs_posted__302307_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['location', 'is_remote'], name='jobs_locatio_f4fa03_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['published_at', 'status'], name='jobs_publish_ec95c0_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['application_deadline'], name='jobs_applica_13933b_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['salary_min', 'salary_max'], name='jobs_salary__0b1197_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='jobs_search__ee9a96_gin'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['job', 'status'], name='job_applica_job_id_e29281_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['applicant', 'status'], name='job_applica_applica_435597_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['status', '-applied_at'], name='job_applica_status_4768a2_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['job', '-applied_at'], name='job_applica_job_id_912551_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['interview_scheduled_at'], name='job_applica_intervi_30276d_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['last_contact_date'], name='job_applica_last_co_526306_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='jobapplication',
            unique_together={('job', 'applicant')},
        ),
        migrations.AddIndex(
            model_name='jobview',
            index=models.Index(fields=['job', '-viewed_at'], name='job_views_job_id_4ba144_idx'),
        ),
        migrations.AddIndex(
            model_name='jobview',
            index=models.Index(fields=['user', '-viewed_at'], name='job_views_user_id_932dd5_idx'),
        ),
        migrations.AddIndex(
            model_name='jobview',
            index=models.Index(fields=['ip_address', '-viewed_at'], name='job_views_ip_addr_d2557d_idx'),
        ),
        migrations.AddIndex(
            model_name='jobview',
            index=models.Index(fields=['source', '-viewed_at'], name='job_views_source_a279b1_idx'),
        ),
        migrations.AddIndex(
            model_name='savedjob',
            index=models.Index(fields=['user', '-saved_at'], name='saved_jobs_user_id_e21ea0_idx'),
        ),
        migrations.AddIndex(
            model_name='savedjob',
            index=models.Index(fields=['job', '-saved_at'], name='saved_jobs_job_id_cee6c5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='savedjob',
            unique_together={('user', 'job')},
        ),
    ]
